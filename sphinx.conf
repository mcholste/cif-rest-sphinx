source infrastructure
{
	type			= pgsql
	sql_host		= localhost
	sql_user		= postgres
	sql_pass		= password
	sql_db			= cif
	sql_query		= \
		SELECT t1.id AS id, cc, asn, asn_desc, TEXT(address) AS address, inetmi(CAST(network(address) AS inet), '0.0.0.0') AS subnet_start, inetmi(CAST(broadcast(address) AS inet), '0.0.0.0') AS subnet_end, description, t1.severity AS severity, t1.confidence AS confidence, DATE_PART('epoch', t1.detecttime) AS detecttime, DATE_PART('epoch', t1.created) AS created, SUBSTRING(data FROM 'content":"([^"]+)"') AS alternativeid FROM infrastructure t1 LEFT JOIN archive t2 ON (t1.uuid=t2.uuid) LEFT JOIN asn t3 on (t2.uuid=t3.uuid) LEFT JOIN countrycode t4 on (t2.uuid=t4.uuid)
	sql_attr_uint		= confidence
	sql_attr_uint = asn
	sql_attr_uint = subnet_start
	sql_attr_uint = subnet_end
	sql_attr_timestamp	= detecttime
	sql_attr_timestamp = created
	sql_attr_string		= severity
	sql_field_string = address
	sql_field_string = description
	sql_field_string = cc
	sql_field_string = alternativeid
	sql_field_string = asn_desc
	sql_ranged_throttle	= 0
}

source domain
{
	type			= pgsql
	sql_host		= localhost
	sql_user		= postgres
	sql_pass		= password
	sql_db			= cif
	sql_query = \
	SELECT t1.id AS id, cc, asn, asn_desc, address, description, t1.severity AS severity, t1.confidence AS confidence, DATE_PART('epoch', t1.detecttime) AS detecttime, DATE_PART('epoch', t1.created) AS created, SUBSTRING(data FROM 'content":"([^"]+)"') AS alternativeid FROM domain t1 LEFT JOIN archive t2 ON (t1.uuid=t2.uuid) LEFT JOIN asn t3 on (t1.uuid=t3.uuid) LEFT JOIN countrycode t4 on (t1.uuid=t4.uuid)
	sql_attr_uint		= confidence
	sql_attr_uint = asn
	sql_attr_timestamp	= detecttime
	sql_attr_timestamp = created
	sql_attr_string		= severity
	sql_field_string = address
	sql_field_string = description
	sql_field_string = cc
	sql_field_string = alternativeid
	sql_field_string = asn_desc
	sql_ranged_throttle	= 0
}


index domain
{
	source			= domain
	path			= /var/lib/sphinxsearch/data/domain
	docinfo			= extern
	mlock			= 0
	morphology		= none
	min_word_len		= 1
	charset_type		= sbcs
	charset_table		= 0..9, A..Z->a..z, _, a..z, U+A8->U+B8, U+B8, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF, U+2E, U+2D
	min_prefix_len		= 4
	prefix_fields		= address
	enable_star		= 1
	dict = keywords
	html_strip		= 0
}

source url
{
	type			= pgsql
	sql_host		= localhost
	sql_user		= postgres
	sql_pass		= password
	sql_db			= cif
	sql_query = \
		SELECT t1.id AS id, cc, asn, asn_desc, SUBSTRING(TEXT(address) FROM '^https?://(.+)') AS address, description, t1.severity AS severity, t1.confidence AS confidence, DATE_PART('epoch', t1.detecttime) AS detecttime, DATE_PART('epoch', t1.created) AS created, SUBSTRING(data FROM 'content":"([^"]+)"') AS alternativeid FROM url t1 LEFT JOIN archive t2 ON (t1.uuid=t2.uuid) LEFT JOIN asn t3 on (t1.uuid=t3.uuid) LEFT JOIN countrycode t4 on (t1.uuid=t4.uuid)
	sql_attr_uint		= confidence
	sql_attr_uint = asn
	sql_attr_timestamp	= detecttime
	sql_attr_timestamp = created
	sql_attr_string		= severity
	sql_field_string = address
	sql_field_string = description
	sql_field_string = cc
	sql_field_string = alternativeid
	sql_field_string = asn_desc
	sql_ranged_throttle	= 0
}


index url
{
	source			= url
	path			= /var/lib/sphinxsearch/data/url
	docinfo			= extern
	mlock			= 0
	morphology		= none
	min_word_len		= 1
	charset_type		= sbcs
	charset_table		= 0..9, A..Z->a..z, _, a..z, U+A8->U+B8, U+B8, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF, U+2E, U+2D
	min_prefix_len		= 4
	prefix_fields		= address
	enable_star		= 1
	dict = keywords
	html_strip		= 0
}

index infrastructure
{
	source			= infrastructure
	path			= /var/lib/sphinxsearch/data/infrastructure
	docinfo			= extern
	mlock			= 0
	morphology		= none
	min_word_len		= 1
	charset_type		= sbcs
	charset_table		= 0..9, A..Z->a..z, _, a..z, U+A8->U+B8, U+B8, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF, U+2E, U+2D
	min_prefix_len		= 4
	prefix_fields		= address
	enable_star		= 1
	dict = keywords
	html_strip		= 0
}

indexer
{
	mem_limit		= 32M
}

searchd
{
	listen			= 9312
	listen			= 9306:mysql41
	log			= /var/log/sphinxsearch/searchd.log
	query_log		= /var/log/sphinxsearch/query.log
	read_timeout		= 5
	client_timeout		= 300
	max_children		= 30
	pid_file		= /var/run/searchd.pid
	max_matches		= 1000
	seamless_rotate		= 1
	preopen_indexes		= 1
	unlink_old		= 1
	mva_updates_pool	= 1M
	max_packet_size		= 8M
	max_filters		= 256
	max_filter_values	= 4096
	max_batch_queries	= 32
}

